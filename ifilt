#!/usr/bin/env ruby
require "optparse"

ARGV << '-h' if ARGV.empty?
options = {}
optparse = OptionParser.new do|opts|
  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
    exit
  end
  opts.on( '-r', '--ratings RATINGS', 'Filter ratings (comma separated)' ) do |r|
    r = "[#{r.gsub(',','|')}]" if r.match(',')
    options[:ratings] = r
  end
  opts.on( '-i', '--include-tags TAGS', 'Include tags (comma separated)' ) do |t|
    options[:include_tags] = t.split ","
  end
  opts.on( '-e', '--exclude-tags TAGS', 'Exclude tags (comma separated)' ) do |t|
    options[:exclude_tags] = t.split ","
  end
  opts.on( '-a', '--all-tags TAGS', 'Require all tags (comma separated)' ) do |t|
    options[:require_tags] = t.split ","
  end
  opts.on( '-s', '--selected', 'Selected and single motivs' ) do |t|
    options[:selected] = true
  end
  opts.on( '-S', '--single', 'Single motivs' ) do |t|
    options[:single] = true
  end
  opts.on( '-u', '--unselected', 'Unselected motivs' ) do |t|
    options[:unselected] = true
  end
end
optparse.parse!

require_relative "input.rb"
files = FILES

if options[:selected]
  grouped = `exiv2 -K Xmp.xmpMM.MotifID #{files.join " "}`.split("\n").collect{|l| l.split(/\s+/)[0]}
  selected = `exiv2 -K Xmp.xmpMM.MotifSelected #{files.join " "}`.split("\n").collect{|l| l.split(/\s+/)[0]}
  files = (FILES-grouped+selected).sort
end

if options[:single]
  grouped = `exiv2 -K Xmp.xmpMM.MotifID #{files.join " "}`.split("\n").collect{|l| l.split(/\s+/)[0]}
  files = FILES - grouped
end

if options[:unselected]
  grouped = `exiv2 -K Xmp.xmpMM.MotifID #{files.join " "}`.split("\n").collect{|l| l.split(/\s+/)[0]}
  selected = `exiv2 -K Xmp.xmpMM.MotifSelected #{files.join " "}`.split("\n").collect{|l| l.split(/\s+/)[0]}
  files = (grouped-selected).sort
end

if options[:ratings]
  ratings = `exiv2 -K Xmp.xmp.Rating #{files.join " "}`.split("\n").collect{|l| l.split(/\s+/)}
  files = []
  ratings.each do |rating|
    files << rating.first if rating.last == options[:ratings]
  end
end

if options[:include_tags]
  tagged_files = []
  `exiv2 -K Xmp.dc.subject #{files.join " "}`.each_line do |line|
    i = line.split(/\s+/)
    file = i.shift
    i.shift(3)
    tags = i.join(" ").split(", ")
    tagged_files << file unless (tags & options[:include_tags]).empty?
  end
  files = tagged_files
end

if options[:exclude_tags]
  tagged_files = []
  `exiv2 -K Xmp.dc.subject #{files.join " "}`.each_line do |line|
    i = line.split(/\s+/)
    file = i.shift
    i.shift(3)
    tags = i.join(" ").split(", ")
    files.delete(file)  unless (tags & options[:exclude_tags]).empty?
    #tagged_files << file if (tags & options[:exclude_tags]).empty?
  end
  #files = tagged_files
end

if options[:require_tags]
  tagged_files = []
  `exiv2 -K Xmp.dc.subject #{files.join " "}`.each_line do |line|
    i = line.split(/\s+/)
    file = i.shift
    i.shift(3)
    tags = i.join(" ").split(", ")
    tagged_files << file if (options[:require_tags]-tags).empty?
  end
  files = tagged_files
end

puts files.collect{|f| f.strip}.join "\n"
